diff -urN civicrm-4.2.19/CRM/Report/Form/Contribute/Lybunt.php civicrm-4.2.19-wmf/CRM/Report/Form/Contribute/Lybunt.php

Status: Perhaps move the approach from extended report into core?
Background: Possibly part of the Giant Rabbit reports? This appears to be part of some method of monitoring sql queries?
In 4.6 the report UI has changed a bit & I added a developer tab to the extended reports which makes
it possible for someone with the permission to see the sql - would putting that in core work?

Commit Comment: Make compatible with raw SQL instrumentation

Store the intermediate SQL query in our standard member variable, so it can be displayed in the GUI.

--- civicrm-4.2.19/CRM/Report/Form/Contribute/Lybunt.php	2014-09-09 15:40:20.000000000 -0700
+++ civicrm-4.2.19-wmf/CRM/Report/Form/Contribute/Lybunt.php	2015-03-11 13:31:10.394248474 -0700
@@ -37,6 +37,8 @@
 class CRM_Report_Form_Contribute_Lybunt extends CRM_Report_Form {
 
 
+  protected $sql;
+
   protected $_charts = array(
     '' => 'Tabular',
     'barChart' => 'Bar Chart',
@@ -326,9 +328,9 @@
     $rows = $contactIds = array();
     if (!CRM_Utils_Array::value('charts', $this->_params)) {
       $this->limit();
-      $getContacts = "SELECT SQL_CALC_FOUND_ROWS {$this->_aliases['civicrm_contact']}.id as cid {$this->_from} {$this->_where}  GROUP BY {$this->_aliases['civicrm_contact']}.id {$this->_limit}";
+      $this->sql = "SELECT SQL_CALC_FOUND_ROWS {$this->_aliases['civicrm_contact']}.id as cid {$this->_from} {$this->_where}  GROUP BY {$this->_aliases['civicrm_contact']}.id {$this->_limit}";
 
-      $dao = CRM_Core_DAO::executeQuery($getContacts);
+      $dao = CRM_Core_DAO::executeQuery($this->sql);
 
       while ($dao->fetch()) {
         $contactIds[] = $dao->cid;
@@ -339,13 +341,13 @@
 
     if (!empty($contactIds) || CRM_Utils_Array::value('charts', $this->_params)) {
       if (CRM_Utils_Array::value('charts', $this->_params)) {
-        $sql = "{$this->_select} {$this->_from} {$this->_where} {$this->_groupBy}";
+        $this->sql = "{$this->_select} {$this->_from} {$this->_where} {$this->_groupBy}";
       }
       else {
-        $sql = "{$this->_select} {$this->_from} WHERE {$this->_aliases['civicrm_contact']}.id IN (" . implode(',', $contactIds) . ") AND {$this->_aliases['civicrm_contribution']}.is_test = 0 {$this->_statusClause} {$this->_groupBy} ";
+        $this->sql = "{$this->_select} {$this->_from} WHERE {$this->_aliases['civicrm_contact']}.id IN (" . implode(',', $contactIds) . ") AND {$this->_aliases['civicrm_contribution']}.is_test = 0 {$this->_statusClause} {$this->_groupBy} ";
       }
 
-      $dao           = CRM_Core_DAO::executeQuery($sql);
+      $dao           = CRM_Core_DAO::executeQuery($this->sql);
       $current_year  = $this->_params['yid_value'];
       $previous_year = $current_year - 1;
 
diff -urN civicrm-4.2.19/CRM/Report/Form.php civicrm-4.2.19-wmf/CRM/Report/Form.php
--- civicrm-4.2.19/CRM/Report/Form.php	2014-09-09 15:40:20.000000000 -0700
+++ civicrm-4.2.19-wmf/CRM/Report/Form.php	2015-03-11 13:31:10.390248474 -0700
@@ -387,6 +387,7 @@
       else {
         $this->_columns[$tableName]['alias'] = $table['alias'] . '_civireport';
       }
+      $this->_columns[$tableName]['alias'] = str_replace('.', '_', $this->_columns[$tableName]['alias']);
 
       $this->_aliases[$tableName] = $this->_columns[$tableName]['alias'];
 
@@ -448,6 +449,7 @@
             $alias = isset($field['alias']) ? $field['alias'] : (isset($this->_columns[$tableName]['alias']) ?
                      $this->_columns[$tableName]['alias'] : $tableName
             );
+            $alias = str_replace('.', '_', $alias);
             $this->_columns[$tableName][$fieldGrp][$fieldName]['alias'] = $alias;
 
             // set name = fieldName, unless already set
@@ -1654,6 +1656,7 @@
             if (CRM_Utils_Array::value('statistics', $field)) {
               foreach ($field['statistics'] as $stat => $label) {
                 $alias = "{$tableName}_{$fieldName}_{$stat}";
+                $alias = str_replace('.', '_', $alias);
                 switch (strtolower($stat)) {
                   case 'max':
                   case 'sum':
@@ -1684,6 +1687,7 @@
             }
             else {
               $alias = "{$tableName}_{$fieldName}";
+              $alias = str_replace('.', '_', $alias);
               $select[] = "{$field['dbAlias']} as $alias";
               $this->_columnHeaders["{$tableName}_{$fieldName}"]['title'] = CRM_Utils_Array::value('title', $field);
               $this->_columnHeaders["{$tableName}_{$fieldName}"]['type'] = CRM_Utils_Array::value('type', $field);
@@ -2147,6 +2151,7 @@
   function doTemplateAssignment(&$rows) {
     $this->assign_by_ref('columnHeaders', $this->_columnHeaders);
     $this->assign_by_ref('rows', $rows);
+    $this->assign('reportSql', $this->sql);
     $this->assign('statistics', $this->statistics($rows));
   }
 
@@ -2214,8 +2219,8 @@
                                !empty($this->_params["{$fieldName}_to_time"])
                                ? date('His', strtotime(CRM_Utils_Array::value("{$fieldName}_to_time", $this->_params), '235959')) : '235959'
             );
-            $from = CRM_Utils_Date::customFormat($from, NULL, array('d'));
-            $to = CRM_Utils_Date::customFormat($to, NULL, array('d'));
+            $from = CRM_Utils_Date::customFormat($from, '%B %E%f, %Y %H:%Mh');
+            $to = CRM_Utils_Date::customFormat($to, '%B %E%f, %Y %H:%Mh');
 
             if ($from || $to) {
               $statistics['filters'][] = array(
@@ -2425,11 +2430,11 @@
     $this->beginPostProcess();
 
     // build query
-    $sql = $this->buildQuery();
+    $this->sql = $this->buildQuery();
 
     // build array of result based on column headers. This method also allows
     // modifying column headers before using it to build result set i.e $rows.
-    $this->buildRows($sql, $rows);
+    $this->buildRows($this->sql, $rows);
 
     // format result set.
     $this->formatDisplay($rows);
